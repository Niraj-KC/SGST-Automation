# -*- coding: utf-8 -*-
"""summaryCalculation.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rzNrTfWWtmtq-Ui_-tF-wHkRSADDEjF6
"""

# import sqlite3
# from tkinter import *
from datetime import datetime
from dateutil.relativedelta import relativedelta

# -----------------INPUTS---------------------------
filePath = ''


month = 'Jan-19'
startingOpeningBal = 0
startingOpeningBal_RMC = 89002

eligibleSGSTInput = 137751
SGSTPaid = 0
eligibleSGSTadjustedAgainstEligibleGoods = 376122
RCM_EligibleSGSTInput = 635627
SGStAsPerCreditLedger = 239395

# ---------------Conditional Variable-----------------------
eligibleSGSTadjustedAgainst_Non_EligibleGoods = 0
RMC_SGSTUtilisedagnistEligiblegoods = 0
RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods = 0

eligibleSGSTAdjustedAgainst_Other_Goods = 0

#----------------String Variable---------------------------

str_EligibleSGSTadjustedAgainstEligibleGoods = ''
str_RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods = ''


# ----------------Variables----------------------------
try:
    openingBal = closingSGSTBal
    openingBal_RMC = closingSGSTBal_RMC
except NameError:
    openingBal = startingOpeningBal
    openingBal_RMC = startingOpeningBal_RMC

totalEligibleITC = openingBal + eligibleSGSTInput + SGSTPaid
totalEligibleITCAdjustedDuringMonth = eligibleSGSTadjustedAgainstEligibleGoods + eligibleSGSTadjustedAgainst_Non_EligibleGoods
balanceEligibleSGST = totalEligibleITC - eligibleSGSTadjustedAgainstEligibleGoods - eligibleSGSTadjustedAgainst_Non_EligibleGoods
balanceSGST_RMC = openingBal_RMC + RCM_EligibleSGSTInput - RMC_SGSTUtilisedagnistEligiblegoods - RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods
SGSTClaims = eligibleSGSTadjustedAgainstEligibleGoods + RMC_SGSTUtilisedagnistEligiblegoods

totalSGSTBal = balanceEligibleSGST + balanceSGST_RMC
diff = totalSGSTBal - SGStAsPerCreditLedger


# --------------Date Related Functions------------------
def toStrDate(pyDate):
    return datetime.strftime(pyDate, '%b-%Y')


def toPyDate(strDate):
    return datetime.strptime(strDate, '%b-%Y')


def increaseMonthBy1(pyDate):
    return pyDate + relativedelta(months=1)


# --------------Summary Calculation Function-------------------

def calculate(event):
    global closingSGSTBal, closingSGSTBal_RMC, eligibleSGSTadjustedAgainst_Non_EligibleGoods, RMC_SGSTUtilisedagnistEligiblegoods, RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods, eligibleSGSTAdjustedAgainst_Other_Goods, openingBal, openingBal_RMC, totalEligibleITC, totalEligibleITCAdjustedDuringMonth, balanceEligibleSGST, balanceSGST_RMC, SGSTClaims, totalSGSTBal, diff, eligibleSGSTadjustedAgainstEligibleGoods, str_EligibleSGSTadjustedAgainstEligibleGoods, str_RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods
    if diff > 0:
        if balanceEligibleSGST > diff:
            eligibleSGSTadjustedAgainst_Non_EligibleGoods = diff
        else:
            eligibleSGSTadjustedAgainst_Non_EligibleGoods = balanceEligibleSGST
            RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods = diff - balanceEligibleSGST
        balanceEligibleSGST = totalEligibleITC - eligibleSGSTadjustedAgainstEligibleGoods - eligibleSGSTadjustedAgainst_Non_EligibleGoods
        balanceSGST_RMC = openingBal_RMC + RCM_EligibleSGSTInput - RMC_SGSTUtilisedagnistEligiblegoods - RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods
        diff = totalSGSTBal - SGStAsPerCreditLedger

    carryForward = 0
    if balanceEligibleSGST < 0:
        if eligibleSGSTadjustedAgainstEligibleGoods > balanceEligibleSGST * -1:
            str_EligibleSGSTadjustedAgainstEligibleGoods = f'={eligibleSGSTadjustedAgainstEligibleGoods}-{balanceEligibleSGST*-1}'
            eligibleSGSTadjustedAgainstEligibleGoods += balanceEligibleSGST
            RMC_SGSTUtilisedagnistEligiblegoods = balanceEligibleSGST * -1
        else:
            str_EligibleSGSTadjustedAgainstEligibleGoods = f'={eligibleSGSTadjustedAgainstEligibleGoods}-{eligibleSGSTadjustedAgainstEligibleGoods}'
            eligibleSGSTadjustedAgainstEligibleGoods = 0

            carryForward = eligibleSGSTadjustedAgainstEligibleGoods + balanceEligibleSGST
            RMC_SGSTUtilisedagnistEligiblegoods = carryForward * -1

    balanceEligibleSGST = totalEligibleITC - eligibleSGSTadjustedAgainstEligibleGoods - eligibleSGSTadjustedAgainst_Non_EligibleGoods
    balanceSGST_RMC = openingBal_RMC + RCM_EligibleSGSTInput - RMC_SGSTUtilisedagnistEligiblegoods - RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods
    print(balanceSGST_RMC)

    if balanceSGST_RMC < 0:
        str_RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods = f'={RMC_SGSTUtilisedagnistEligiblegoods}-{balanceSGST_RMC}'
        RMC_SGSTUtilisedagnistEligiblegoods += balanceSGST_RMC
        eligibleSGSTAdjustedAgainst_Other_Goods = balanceSGST_RMC * -1

        balanceEligibleSGST = totalEligibleITC - eligibleSGSTadjustedAgainstEligibleGoods - eligibleSGSTadjustedAgainst_Non_EligibleGoods
        balanceSGST_RMC = openingBal_RMC + RCM_EligibleSGSTInput - RMC_SGSTUtilisedagnistEligiblegoods - RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods
        totalSGSTBal = balanceEligibleSGST + balanceSGST_RMC
        diff = totalSGSTBal - SGStAsPerCreditLedger

    totalEligibleITC = openingBal + eligibleSGSTInput + SGSTPaid
    totalEligibleITCAdjustedDuringMonth = eligibleSGSTadjustedAgainstEligibleGoods + eligibleSGSTadjustedAgainst_Non_EligibleGoods
    balanceEligibleSGST = totalEligibleITC - eligibleSGSTadjustedAgainstEligibleGoods - eligibleSGSTadjustedAgainst_Non_EligibleGoods
    balanceSGST_RMC = openingBal_RMC + RCM_EligibleSGSTInput - RMC_SGSTUtilisedagnistEligiblegoods - RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods
    SGSTClaims = eligibleSGSTadjustedAgainstEligibleGoods + RMC_SGSTUtilisedagnistEligiblegoods

    totalSGSTBal = balanceEligibleSGST + balanceSGST_RMC
    diff = totalSGSTBal - SGStAsPerCreditLedger

    closingSGSTBal = balanceEligibleSGST
    closingSGSTBal_RMC = balanceSGST_RMC


# -------------------Database----------------------------
# con = sqlite3.connect('GSTSummary.db')

# ---------------User Interface--------------------- SHarkar
calculate('Event')
print(
    f'cp:{month}, {openingBal}, {eligibleSGSTInput}, {SGSTPaid}, {totalEligibleITC}, eli={eligibleSGSTadjustedAgainstEligibleGoods}, non={eligibleSGSTadjustedAgainst_Non_EligibleGoods}, other={eligibleSGSTAdjustedAgainst_Other_Goods}, {balanceEligibleSGST}')
print(
    f'{openingBal_RMC}, {RCM_EligibleSGSTInput}, {RMC_SGSTUtilisedagnistEligiblegoods}, {RMC_eligibleSGSTadjustedAgainst_Non_EligibleGoods}, {balanceSGST_RMC}')
print(f'claim={SGSTClaims}')
print(f'{totalSGSTBal}, {SGStAsPerCreditLedger}, {diff}')
